
. 
. version 13

. 
. set seed 0193284710

. 
. foreach julia in "" /*julia*/ {
  2.   use collapsed, clear
  3. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
  4.   boottest post_self=.04, `julia' nogr
  5.   boottest post_self=.04, `julia' weight(webb) noci
  6.   boottest post_self=.04, `julia' weight(webb) jk nogr
  7.   boottest post_self=.04, `julia' weight(webb) jk nogr nonull
  8.   scoretest post_self=.04, `julia' nogr
  9. 
.   boottest post_self post, `julia' reps(999) weight(webb) nogr  // wild bootstrap test of joint null, Webb weights, null imposed, 9,999 replications
 10.   boottest (post_self) (post), `julia' reps(999) weight(webb) nogr  // same
 11.   boottest {post_self=.04} {post}, `julia' nogr  // separate tests, no correction for multiple hypotheses
 12.   boottest {(post) (post_self=.04)} {(post) (post_self=.08)}, `julia' madj(sidak) nogr  // separate tests, Sidak correction for  multiple hypotheses
 13. 
.   use nlsw88
 14. 
.   qui regress wage tenure ttl_exp collgrad, cluster(industry)
 15.   boottest tenure, `julia' svmat nogr  // wild bootstrap test of joint null, Rademacher weights, null imposed, saving  simulated distribution
 16. 
.   constraint 1 ttl_exp = .2
 17.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
 18.   boottest tenure, `julia' nogr  // wild bootstrap test of tenure=0, conditional on ttl_exp=2, Rademacher weights, null imposed, 999 replications
 19. 
.   regress wage tenure ttl_exp collgrad south#union, cluster(industry)
 20.   margins south
 21.   boottest, `julia' margins nogr  // bootstrap CI of average predicted wage for south = 0 and 1
 22.   margins, dydx(south)
 23.   boottest, `julia' margins graphopt(xtitle(Average effect of south)) nogr  // bootstrap CI of average impact in sample of changing south from 0 to 1
 24. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
 25.   boottest tenure, `julia' ptype(equaltail) seed(987654321) nogr  // Wald test, wild restricted efficient bootstrap, Rademacher weights, null imposed, 999 reps
 26.   boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) nogr  // same but bootstrap-c
 27.   boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) gridmin(-2) gridmax(2) nogr // same but limit graphing range
 28.   boottest, `julia' ar nogr  // same bootstrap, but Anderson-Rubin test (much faster)
 29.   scoretest tenure, `julia' nogr  // Rao/LM test of same
 30.   waldtest tenure, `julia' nogr  // Wald test of same
 31. 
.   qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
 32.   boottest tenure, `julia' noci  // WRE bootstrap, Rademacher weights, 999 replications
 33.   boottest tenure, `julia' noci jk // WRE bootstrap, Rademacher weights, 999 replications
 34.   qui cmp (wage = tenure) (tenure = collgrad ttl_exp), ind(1 1) qui nolr cluster(industry)
 35.   boottest tenure, `julia'  // reasonable match on test statistic and p value
 36. 
.   qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
 37.   boottest tenure, `julia' nograph  // Wald test, WRE bootstrap, Rademacher weights, 999 replications
 38.   boottest tenure, `julia' nograph jk // Wald test, WRE bootstrap, Rademacher weights, 999 replications
 39.   boottest, `julia' nograph ar  // same, but Anderson-Rubin (faster, but CI misleading if instruments invalid)
 40. 
.   qui ivregress liml wage (collgrad tenure = ttl_exp union), cluster(industry)
 41.   boottest, `julia' ar nogr  // Anderson-Rubin test, with contour plot of p value surface
 42.   boottest, `julia' ar nogr jk  // Anderson-Rubin test, with contour plot of p value surface
 43.   boottest collgrad tenure, `julia' gridpoints(10 10) nogr  // WRE boostrap also with contour plot
 44. 
.   qui regress wage tenure ttl_exp collgrad, robust  // no clustering
 45.   boottest tenure, `julia' nogr
 46.   boottest tenure, `julia' nogr jk
 47. 
.   qui ivregress liml wage (collgrad tenure = ttl_exp union), robust  // no clustering
 48.   boottest, `julia' ar nogr
 49.   boottest collgrad tenure, `julia' gridpoints(10 10) nogr
 50. 
.   qui regress wage ttl_exp collgrad tenure, cluster(industry)
 51.   waldtest collgrad tenure, cluster(industry age) nogr // multi-way-clustered tests after estimation command not offering such
 52.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) gridmin(-.2) gridmax(.2) nogr
 53. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<., cluster(age) absorb(industry)
 54.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph  // override estimate's clustering
 55.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph jk // override estimate's clustering
 56.   qui reg wage ttl_exp collgrad tenure i.industry [aw=hours] if occupation<., cluster(age)
 57.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph  // should match previous result
 58.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph jk // should match previous result
 59. 
.   qui probit c_city tenure wage ttl_exp collgrad, cluster(industry)
 60.   boottest tenure, `julia' nogr                          // score bootstrap, Rademacher weights, null imposed, 999 replications
 61.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) small nogr  // multi-way-clustered, finite-sample-corrected test with score bootstrap
 62. 
.   qui gsem (c_city <- tenure wage ttl_exp collgrad), vce(cluster industry) probit  // same probit estimate as previous
 63.   boottest tenure, `julia'                                                              // requires Stata 14.0 or later
 64.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) small          // requires Stata 14.0 or later
 65. 
.   sysuse auto, clear
 66.   ml model lf myprobit (foreign = mpg weight)  // define model
 67.   qui ml max // estimate
 68.   boottest mpg, `julia' cmdline(ml model lf myprobit (foreign = mpg weight)) 
 69. 
.   use collapsed, clear
 70. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
 71.   boottest post_self=.04, `julia' weight(webb) nogr
 72.   boottest post_self=.04, `julia' weight(webb) reps(9999999) noci
 73.   boottest post_self=.04, `julia' weight(normal) reps(9999) noci
 74.   boottest post_self=.04, `julia' weight(gamma) reps(9999) noci svv
 75.   boottest post_self=.04, `julia' weight(mammen) reps(9999) noci
 76.   boottest post_self=.04, `julia' weight(mammen) reps(9999) boottype(score) nogr
 77. 
.   qui regress hasinsurance selfemployed post post_self, robust
 78.   boottest post_self=.04, `julia' weight(webb) nogr
 79. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
 80.   boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
 81.   boottest (post_self=.05) (post=-.02) (selfemployed=-.15), `julia' reps(9999) weight(webb) nogr
 82. 
.   qui regress hasinsurance selfemployed post post_self
 83.   boottest post_self=.04, `julia' weight(webb) nogr
 84.   boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
 85.   scoretest (post_self=.05), `julia' nogr
 86.   scoretest (post_self=.05) (post=-.02), `julia' nogr
 87.   boottest (post_self=.08), `julia' boottype(score) reps(9999) nogr
 88.   boottest (post_self=.05) (post=-.02), `julia' boottype(score) reps(9999) nogr
 89. 
.   use nlsw88, clear
 90.   constraint 1 ttl_exp = .2
 91.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
 92.   boottest tenure, `julia' nogr
 93. 
.   keep if e(sample)
 94.   gen id = _n - cond(_n>1000, 1000, 0)
 95.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(id)  // granular but not pure robust
 96.   boottest tenure, `julia' reps(9999) nogr
 97. 
.   qui areg wage tenure ttl_exp collgrad, cluster(id) a(industry)
 98.   boottest tenure, `julia' reps(9999) nogr
 99. 
.   use d:\OneDrive\Documents\Macros\nlsw88, clear
100.   qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
101.   boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
102.   boottest tenure, `julia' nonull reps(99999) matsize(.1) nogr
103.   boottest tenure, `julia' ptype(upper) svmat(t) reps(9999) nogr
104.   boottest tenure, `julia' ptype(lower) svmat(numer) reps(9999) nogr
105. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
106.   boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
107. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
108.   boottest tenure, `julia' ptype(equaltail) reps(99) noci
109. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
110.   boottest tenure, ptype(equaltail) reps(99) noci
111.   boottest collgrad tenure, `julia' ptype(equaltail) reps(99) noci
112. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<.
113.   boottest tenure, `julia' ptype(equaltail) reps(99) noci
114.   boottest tenure collgrad, `julia' ptype(equaltail) reps(99) noci
115. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
116.   boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) nogr
117.   boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) matsize(.01) nogr
118. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<., robust
119.   boottest tenure, `julia' ptype(equaltail) matsize(.005) noci weight(webb)
120. 
.   preserve
121.   keep if e(sample)
122.   gen id = _n - cond(_n>1000, 1000, 0)
123.   boottest tenure, `julia' cluster(id) ptype(equaltail) matsize(.005) noci weight(webb)
124.   restore
125. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
126.   boottest, `julia' ar nogr
127.   boottest, `julia' ar nonull nogr
128.   scoretest tenure, `julia' nogr
129.   waldtest tenure, `julia' ptype(upper) nogr
130. 
.   qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
131.   boottest tenure, `julia' nogr
132. 
.   qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
133.   boottest tenure, `julia' nograph weight(webb) reps(9999)
134.   qui gen individual = _n
135.   boottest tenure, `julia' noci bootcluster(individual) weight(webb)
136.   boottest tenure, `julia' nograph bootcluster(collgrad) cluster(collgrad industry) weight(webb) reps(9999)
137. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., cluster(age) absorb(industry)
138.   boottest tenure, `julia' nograph cluster(age occupation) bootcluster(occupation)
139. 
.   qui areg wage ttl_exp collgrad tenure if occupation<. & grade<. & union<. & hours<., robust absorb(industry)
140.   boottest tenure, `julia' nograph
141. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., robust absorb(industry)
142.   boottest tenure, `julia' nograph 
143. 
.   qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(industry)
144.   boottest tenure, `julia' nograph
145.   boottest occupation, `julia' nograph
146. 
.   qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(age)
147.   boottest tenure, `julia' nograph
148.   boottest collgrad tenure, `julia' nograph
149.   boottest occupation, `julia' gridmin(-1) gridmax(1) nograph
150. 
.   constraint 1 [wage]collgrad
151.   qui ivreghdfe wage ttl_exp /*collgrad*/ tenure (occupation = union married) [aw=hours], liml cluster(industry) absorb(age)  // approximate contrained LIML with ivreghdfe
152.   boottest tenure, `julia' nograph
153. 
.   use d:\OneDrive\Documents\Macros\abdata, clear
154.   qui areg n w k, absorb(ind)
155.   boottest k, `julia' cluster(id year) nograph
156.   qui areg n w k [aw=ys], absorb(ind)
157.   boottest k, `julia' cluster(id year) nograph
158. 
.   use pixel-level-baseline-final, clear
159.   global pix lnkm pixpetro pixdia pixwaterd pixcapdist pixmal pixsead pixsuit pixelev pixbdist
160.   global geo lnwaterkm lnkm2split mean_elev mean_suit malariasuit petroleum diamondd
161.   global poly capdistance1 seadist1 borderdist1
162.   qui encode pixwbcode, gen(ccode)  // make numerical country identifier
163.   qui areg lnl0708s centr_tribe lnpd0 \$pix \$geo \$poly, absorb(ccode)
164.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode)
165.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(pixcluster)
166.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode pixcluster)
167. 
.   infile coll merit male black asian year state chst using regm.raw, clear
168.   qui regress coll merit male black asian i.year i.state if !inlist(state,34,57,59,61,64,71,72,85,88), cluster(state)   
169.   generate individual = _n  // unique ID for each observation
170.   boottest merit, `julia' nogr reps(999) gridpoints(10)  // defaults to bootcluster(state)
171.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull
172.   boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(state year)
173.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(state year)
174.   boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(individual)
175.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual)
176.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual) matsize(.1)
177. }

Warning: with 8 bootstrap clusters, the number of replications, 999, exceeds the universe of Rademacher draws, 2^8 = 256. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0742

95% confidence set for null hypothesis expression: [.03874, .07098]

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0921

Wild bootstrap-t, null imposed, jackknifed residuals, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0991

95% confidence set for null hypothesis expression: [.03571, .07199]
                       *:  3200  conformability error
 boottestOLS::InitVars():     -  function returned error [12]
        boottest::Init():     -  function returned error [240]
    boottest::boottest():     -  function returned error [5]
        boottest::plot():     -  function returned error [9]
     boottest::getplot():     -  function returned error [2]
        boottest_stata():     -  function returned error [54]
                 <istmt>:     -  function returned error [1]
r(3200);

end of do-file

r(3200);

. run "D:\OneDrive\Documents\Macros\boottest\boottest.mata"
. exit, clear
