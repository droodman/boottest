
. 
. version 13

. 
. set seed 0193284710

. 
. foreach julia in "" /*julia*/ {
  2.   use collapsed, clear
  3. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
  4.   boottest post_self=.04, `julia' nogr
  5.   boottest post_self=.04, `julia' weight(webb) noci
  6.   boottest post_self=.04, `julia' weight(webb) jk nogr
  7.   boottest post_self=.04, `julia' weight(webb) jk nogr nonull
  8.   scoretest post_self=.04, `julia' nogr
  9. 
.   boottest post_self post, `julia' reps(999) weight(webb) nogr // wild bootstrap test of joint null, Webb weights, null imposed, 9,999 replications
 10.   boottest (post_self) (post), `julia' reps(999) weight(webb) nogr // same
 11.   boottest {post_self=.04} {post}, `julia' nogr // separate tests, no correction for multiple hypotheses
 12.   boottest {(post) (post_self=.04)} {(post) (post_self=.08)}, `julia' madj(sidak) nogr  // separate tests, Sidak correction for  multiple hypotheses
 13. 
.   use nlsw88
 14. 
.   qui regress wage tenure ttl_exp collgrad, cluster(industry)
 15.   boottest tenure, `julia' svmat nogr        // wild bootstrap test of joint null, Rademacher weights, null imposed, saving  simulated distribution
 16. 
.   constraint 1 ttl_exp = .2
 17.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
 18.   boottest tenure, `julia' nogr // wild bootstrap test of tenure=0, conditional on ttl_exp=2, Rademacher weights, null imposed, 999 replications
 19. 
.   regress wage tenure ttl_exp collgrad south#union, cluster(industry)
 20.   margins south
 21.   boottest, `julia' margins nogr // bootstrap CI of average predicted wage for south = 0 and 1
 22.   margins, dydx(south)
 23.   boottest, `julia' margins graphopt(xtitle(Average effect of south)) nogr  // bootstrap CI of average impact in sample of changing south from 0 to 1
 24. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
 25.   boottest tenure, `julia' ptype(equaltail) seed(987654321) nogr  // Wald test, wild restricted efficient bootstrap, Rademacher weights, null imposed, 999 reps
 26.   boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) nogr  // same but bootstrap-c
 27.   boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) gridmin(-2) gridmax(2) nogr // same but limit graphing range
 28.   boottest, `julia' ar nogr  // same bootstrap, but Anderson-Rubin test (much faster)
 29.   scoretest tenure, `julia' nogr  // Rao/LM test of same
 30.   waldtest tenure, `julia' nogr  // Wald test of same
 31. 
.   qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
 32.   boottest tenure, `julia' noci // WRE bootstrap, Rademacher weights, 999 replications
 33.   qui cmp (wage = tenure) (tenure = collgrad ttl_exp), ind(1 1) qui nolr cluster(industry)
 34.   boottest tenure, `julia'  // reasonable match on test statistic and p value
 35. 
.   qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
 36.   boottest tenure, `julia' nograph // Wald test, WRE bootstrap, Rademacher weights, 999 replications
 37.   boottest, `julia' nograph ar // same, but Anderson-Rubin (faster, but CI misleading if instruments invalid)
 38. 
.   qui ivregress liml wage (collgrad tenure = ttl_exp union), cluster(industry)
 39.   boottest, `julia' ar nogr // Anderson-Rubin test, with contour plot of p value surface
 40.   boottest collgrad tenure, `julia' gridpoints(10 10) nogr // WRE boostrap also with contour plot
 41. 
.   qui regress wage tenure ttl_exp collgrad, robust  // no clustering
 42.   boottest tenure, `julia' nogr
 43. 
.   qui ivregress liml wage (collgrad tenure = ttl_exp union), robust  // no clustering
 44.   boottest, `julia' ar nogr
 45.   boottest collgrad tenure, `julia' gridpoints(10 10) nogr
 46. 
.   qui regress wage ttl_exp collgrad tenure, cluster(industry)
 47.   waldtest collgrad tenure, cluster(industry age) nogr // multi-way-clustered tests after estimation command not offering such
 48.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) gridmin(-.2) gridmax(.2) nogr
 49. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<., cluster(age) absorb(industry)
 50.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph  // override estimate's clustering
 51.   qui reg wage ttl_exp collgrad tenure i.industry [aw=hours] if occupation<., cluster(age)
 52.   boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph  // should match previous result
 53. 
.   qui probit c_city tenure wage ttl_exp collgrad, cluster(industry)
 54.   boottest tenure, `julia' nogr                          // score bootstrap, Rademacher weights, null imposed, 999 replications
 55.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) small nogr  // multi-way-clustered, finite-sample-corrected test with score bootstrap
 56. 
.   qui gsem (c_city <- tenure wage ttl_exp collgrad), vce(cluster industry) probit  // same probit estimate as previous
 57.   boottest tenure, `julia'                                                              // requires Stata 14.0 or later
 58.   boottest tenure, `julia' cluster(industry age) bootcluster(industry) small          // requires Stata 14.0 or later
 59. 
.   sysuse auto, clear
 60.   ml model lf myprobit (foreign = mpg weight)  // define model
 61.   qui ml max // estimate
 62.   boottest mpg, `julia' cmdline(ml model lf myprobit (foreign = mpg weight)) 
 63. 
.   use collapsed, clear
 64. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
 65.   boottest post_self=.04, `julia' weight(webb) nogr
 66.   boottest post_self=.04, `julia' weight(webb) reps(9999999) noci
 67.   boottest post_self=.04, `julia' weight(normal) reps(9999) noci
 68.   boottest post_self=.04, `julia' weight(gamma) reps(9999) noci svv
 69.   boottest post_self=.04, `julia' weight(mammen) reps(9999) noci
 70.   boottest post_self=.04, `julia' weight(mammen) reps(9999) boottype(score) nogr
 71. 
.   qui regress hasinsurance selfemployed post post_self, robust
 72.   boottest post_self=.04, `julia' weight(webb) nogr
 73. 
.   qui regress hasinsurance selfemployed post post_self, cluster(year)
 74.   boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
 75.   boottest (post_self=.05) (post=-.02) (selfemployed=-.15), `julia' reps(9999) weight(webb) nogr
 76. 
.   qui regress hasinsurance selfemployed post post_self
 77.   boottest post_self=.04, `julia' weight(webb) nogr
 78.   boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
 79.   scoretest (post_self=.05), `julia' nogr
 80.   scoretest (post_self=.05) (post=-.02), `julia' nogr
 81.   boottest (post_self=.08), `julia' boottype(score) reps(9999) nogr
 82.   boottest (post_self=.05) (post=-.02), `julia' boottype(score) reps(9999) nogr
 83. 
.   use nlsw88, clear
 84.   constraint 1 ttl_exp = .2
 85.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
 86.   boottest tenure, `julia' nogr
 87. 
.   keep if e(sample)
 88.   gen id = _n - cond(_n>1000, 1000, 0)
 89.   qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(id)  // granular but not pure robust
 90.   boottest tenure, `julia' reps(9999) nogr
 91. 
.   qui areg wage tenure ttl_exp collgrad, cluster(id) a(industry)
 92.   boottest tenure, `julia' reps(9999) nogr
 93. 
.   use d:\OneDrive\Documents\Macros\nlsw88, clear
 94.   qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
 95.   boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
 96.   boottest tenure, `julia' nonull reps(99999) matsize(.1) nogr
 97.   boottest tenure, `julia' ptype(upper) svmat(t) reps(9999) nogr
 98.   boottest tenure, `julia' ptype(lower) svmat(numer) reps(9999) nogr
 99. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
100.   boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
101. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
102.   boottest tenure, `julia' ptype(equaltail) reps(99) noci
103. 
.   qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
104.   boottest tenure, ptype(equaltail) reps(99) noci
105.   boottest collgrad tenure, `julia' ptype(equaltail) reps(99) noci
106. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<.
107.   boottest tenure, `julia' ptype(equaltail) reps(99) noci
108.   boottest tenure collgrad, `julia' ptype(equaltail) reps(99) noci
109. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
110.   boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) nogr
111.   boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) matsize(.01) nogr
112. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<., robust
113.   boottest tenure, `julia' ptype(equaltail) matsize(.005) noci weight(webb)
114. 
.   preserve
115.   keep if e(sample)
116.   gen id = _n - cond(_n>1000, 1000, 0)
117.   boottest tenure, `julia' cluster(id) ptype(equaltail) matsize(.005) noci weight(webb)
118.   restore
119. 
.   qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
120.   boottest, `julia' ar nogr
121.   boottest, `julia' ar nonull nogr
122.   scoretest tenure, `julia' nogr
123.   waldtest tenure, `julia' ptype(upper) nogr
124. 
.   qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
125.   boottest tenure, `julia' nogr
126. 
.   qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
127.   boottest tenure, `julia' nograph weight(webb) reps(9999)
128.   qui gen individual = _n
129.   boottest tenure, `julia' noci bootcluster(individual) weight(webb)
130.   boottest tenure, `julia' nograph bootcluster(collgrad) cluster(collgrad industry) weight(webb) reps(9999)
131. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., cluster(age) absorb(industry)
132.   boottest tenure, `julia' nograph cluster(age occupation) bootcluster(occupation)
133. 
.   qui areg wage ttl_exp collgrad tenure if occupation<. & grade<. & union<. & hours<., robust absorb(industry)
134.   boottest tenure, `julia' nograph
135. 
.   qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., robust absorb(industry)
136.   boottest tenure, `julia' nograph 
137. 
.   qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(industry)
138.   boottest tenure, `julia' nograph
139.   boottest occupation, `julia' nograph
140. 
.   qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(age)
141.   boottest tenure, `julia' nograph
142.   boottest collgrad tenure, `julia' nograph
143.   boottest occupation, `julia' gridmin(-1) gridmax(1) nograph
144. 
.   constraint 1 [wage]collgrad
145.   qui ivreghdfe wage ttl_exp /*collgrad*/ tenure (occupation = union married) [aw=hours], liml cluster(industry) absorb(age)  // approximate contrained LIML with ivreghdfe
146.   boottest tenure, `julia' nograph
147. 
.   use d:\OneDrive\Documents\Macros\abdata, clear
148.   qui areg n w k, absorb(ind)
149.   boottest k, `julia' cluster(id year) nograph
150.   qui areg n w k [aw=ys], absorb(ind)
151.   boottest k, `julia' cluster(id year) nograph
152. 
.   use pixel-level-baseline-final, clear
153.   global pix lnkm pixpetro pixdia pixwaterd pixcapdist pixmal pixsead pixsuit pixelev pixbdist
154.   global geo lnwaterkm lnkm2split mean_elev mean_suit malariasuit petroleum diamondd
155.   global poly capdistance1 seadist1 borderdist1
156.   qui encode pixwbcode, gen(ccode)  // make numerical country identifier
157.   qui areg lnl0708s centr_tribe lnpd0 \$pix \$geo \$poly, absorb(ccode)
158.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode)
159.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(pixcluster)
160.   boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode pixcluster)
161. 
.   infile coll merit male black asian year state chst using regm.raw, clear
162.   qui regress coll merit male black asian i.year i.state if !inlist(state,34,57,59,61,64,71,72,85,88), cluster(state)   
163.   generate individual = _n  // unique ID for each observation
164.   boottest merit, `julia' nogr reps(999) gridpoints(10)  // defaults to bootcluster(state)
165.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull
166.   boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(state year)
167.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(state year)
168.   boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(individual)
169.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual)
170.   boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual) matsize(.1)
171. }
- foreach julia in "" {
- use collapsed, clear
- qui regress hasinsurance selfemployed post post_self, cluster(year)
- boottest post_self=.04, `julia' nogr
= boottest post_self=.04,  nogr

Warning: with 8 bootstrap clusters, the number of replications, 999, exceeds the universe of Rademacher draws, 2^8 = 256. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0742

95% confidence set for null hypothesis expression: [.0384, .07148]
- boottest post_self=.04, `julia' weight(webb) noci
= boottest post_self=.04,  weight(webb) noci

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0921
- boottest post_self=.04, `julia' weight(webb) jk nogr
= boottest post_self=.04,  weight(webb) jk nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0991

95% confidence set for null hypothesis expression: [.03593, .07168]
- boottest post_self=.04, `julia' weight(webb) jk nogr nonull
= boottest post_self=.04,  weight(webb) jk nogr nonull

Wild bootstrap-t, null not imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0911

95% confidence set for null hypothesis expression: [.03672, .073]
- scoretest post_self=.04, `julia' nogr
= scoretest post_self=.04,  nogr

Rao score (Lagrange multiplier) test:
  post_self=.04

                            t(7) =     1.8479
                        Prob>|t| =     0.1071

95% confidence set for null hypothesis expression: [.03455, .07517]
- boottest post_self post, `julia' reps(999) weight(webb) nogr
= boottest post_self post,  reps(999) weight(webb) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self post

                   F(2, 7) =    72.4798
                  Prob > F =     0.0030
- boottest (post_self) (post), `julia' reps(999) weight(webb) nogr
= boottest (post_self) (post),  reps(999) weight(webb) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self
  post

                   F(2, 7) =    72.4798
                  Prob > F =     0.0010
- boottest {post_self=.04} {post}, `julia' nogr
= boottest {post_self=.04} {post},  nogr

Warning: with 8 bootstrap clusters, the number of replications, 999, exceeds the universe of Rademacher draws, 2^8 = 256. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0742

95% confidence set for null hypothesis expression: [.0384, .07148]

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post

                            t(7) =    -5.5821
                        Prob>|t| =     0.0000

95% confidence set for null hypothesis expression: [−.02955, −.0129]
- boottest {(post) (post_self=.04)} {(post) (post_self=.08)}, `julia' madj(sidak) nogr
= boottest {(post) (post_self=.04)} {(post) (post_self=.08)},  madj(sidak) nogr

Warning: with 8 bootstrap clusters, the number of replications, 999, exceeds the universe of Rademacher draws, 2^8 = 256. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post
  post_self=.04

                   F(2, 7) =    26.6776
                  Prob > F =     0.0000
       Sidak-adjusted prob =     0.0000

Wild bootstrap-t, null imposed, 256 replications, Wald test, bootstrap clustering by year, Rademacher weights:
  post
  post_self=.08

                   F(2, 7) =    16.3553
                  Prob > F =     0.0000
       Sidak-adjusted prob =     0.0000
- use nlsw88
(NLSW, 1988 extract)
- qui regress wage tenure ttl_exp collgrad, cluster(industry)
- boottest tenure, `julia' svmat nogr
= boottest tenure,  svmat nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     1.0772
                        Prob>|t| =     0.2843

95% confidence set for null hypothesis expression: [−.03531, .1968]
- constraint 1 ttl_exp = .2
- qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
- boottest tenure, `julia' nogr
= boottest tenure,  nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     2.1254
                        Prob>|t| =     0.0000

95% confidence set for null hypothesis expression: [.008795, .1846]
- regress wage tenure ttl_exp collgrad south#union, cluster(industry)

Linear regression                               Number of obs     =      1,855
                                                F(6, 11)          =     466.17
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2744
                                                Root MSE          =     3.5578

                              (Std. err. adjusted for 12 clusters in industry)
------------------------------------------------------------------------------
             |               Robust
        wage | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
      tenure |   .0371771   .0144888     2.57   0.026     .0052874    .0690668
     ttl_exp |   .2672039   .0213283    12.53   0.000     .2202605    .3141472
    collgrad |   3.152462   .3625251     8.70   0.000      2.35455    3.950374
             |
 south#union |
    0#union  |   .4785269   .3349975     1.43   0.181    -.2587976    1.215851
 1#nonunion  |  -1.438916   .2353751    -6.11   0.000    -1.956973   -.9208588
    1#union  |  -.3029596   .6704026    -0.45   0.660    -1.778506    1.172586
             |
       _cons |   3.581387    .220271    16.26   0.000     3.096574      4.0662
------------------------------------------------------------------------------
- margins south

Predictive margins                                       Number of obs = 1,855
Model VCE: Robust

Expression: Linear prediction, predict()

------------------------------------------------------------------------------
             |            Delta-method
             |     Margin   std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
       south |
          0  |   8.164246   .3020966    27.03   0.000     7.499336    8.829156
          1  |   6.887295   .4175234    16.50   0.000     5.968332    7.806258
------------------------------------------------------------------------------
- boottest, `julia' margins nogr
= boottest,  margins nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  0bn.south 1.south

                           t(11) =    27.0253
                        Prob>|t| =     0.0010

95% confidence set for null hypothesis expression: [7.628, 9.428]

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  

                           t(11) =    16.4956
                        Prob>|t| =     0.0020

95% confidence set for null hypothesis expression: [6.193, 8.846]
- margins, dydx(south)

Average marginal effects                                 Number of obs = 1,855
Model VCE: Robust

Expression: Linear prediction, predict()
dy/dx wrt:  1.south

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     1.south |  -1.276951   .2201867    -5.80   0.000    -1.761578   -.7923233
------------------------------------------------------------------------------
Note: dy/dx for factor levels is the discrete change from the base level.
- boottest, `julia' margins graphopt(xtitle(Average effect of south)) nogr
= boottest,  margins graphopt(xtitle(Average effect of south)) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  1.south

                           t(11) =    -5.7994
                        Prob>|t| =     0.0170

95% confidence set for null hypothesis expression: [−1.872, −.2555]
- qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
- boottest tenure, `julia' ptype(equaltail) seed(987654321) nogr
= boottest tenure,  ptype(equaltail) seed(987654321) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
    2 * min(Prob>|z|, Prob<-|z|) =     0.0601

95% confidence set for null hypothesis expression: [−.1988, 2.294]
- boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) nogr
= boottest tenure,  ptype(equaltail) seed(987654321) stat(c) nogr

Wild bootstrap-c, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     1.6561
    2 * min(Prob>|z|, Prob<-|z|) =     0.1361

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
Note: denominator for z statistic computed from the bootstrap replications of the numerator.
- boottest tenure, `julia' ptype(equaltail) seed(987654321) stat(c) gridmin(-2) gridmax(2) nogr
= boottest tenure,  ptype(equaltail) seed(987654321) stat(c) gridmin(-2) gridmax(2) nogr

Wild bootstrap-c, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     1.6561
    2 * min(Prob>|z|, Prob<-|z|) =     0.1361

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
Note: denominator for z statistic computed from the bootstrap replications of the numerator.
- boottest, `julia' ar nogr
= boottest,  ar nogr

Wild bootstrap-t, null imposed, 999 replications, Anderson-Rubin Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.4454
                        Prob>|z| =     0.0230

95% confidence set for null hypothesis expression: [.07356, 1.249]
- scoretest tenure, `julia' nogr
= scoretest tenure,  nogr

Rao score (Lagrange multiplier) test:
  tenure

                               z =     2.3279
                        Prob>|z| =     0.0199

95% confidence set for null hypothesis expression: [.1367, 1.324]
- waldtest tenure, `julia' nogr
= waldtest tenure,  nogr

Wald test:
  tenure

                               z =     2.6040
                        Prob>|z| =     0.0092

95% confidence set for null hypothesis expression: [.182, 1.29]
- qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
- boottest tenure, `julia' noci
= boottest tenure,  noci

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     7.5847
                        Prob>|z| =     0.0070
- qui cmp (wage = tenure) (tenure = collgrad ttl_exp), ind(1 1) qui nolr cluster(industry)
- boottest tenure, `julia'
= boottest tenure, 

Re-running regression with null imposed.


Fitting individual models as starting point for full model fit.

Fitting full model.

Mixed-process regression                               Number of obs =   2,217
                                                       Wald chi2(2)  = 1004.04
Log likelihood = -13512.755                            Prob > chi2   =  0.0000

 ( 1)  [wage]tenure = 0
------------------------------------------------------------------------------
             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
wage         |
      tenure |          0  (omitted)
       _cons |   7.809235   .1225765    63.71   0.000     7.568989     8.04948
-------------+----------------------------------------------------------------
tenure       |
    collgrad |   .2294204    .233221     0.98   0.325    -.2276843    .6865252
     ttl_exp |   .6828446   .0216115    31.60   0.000     .6404868    .7252024
       _cons |  -2.642845   .2911175    -9.08   0.000    -3.213425   -2.072266
-------------+----------------------------------------------------------------
    /lnsig_1 |   1.752935   .0150177   116.72   0.000     1.723501    1.782369
    /lnsig_2 |   1.504619   .0150192   100.18   0.000     1.475182    1.534056
/atanhrho_12 |   .0271501   .0227031     1.20   0.232    -.0173472    .0716473
-------------+----------------------------------------------------------------
       sig_1 |   5.771519   .0866747                      5.604116    5.943923
       sig_2 |   4.502438   .0676232                      4.371831    4.636947
      rho_12 |   .0271434   .0226864                     -.0173455     .071525
------------------------------------------------------------------------------

Score bootstrap-t, null imposed, 999 replications, Wald test, clustering by cluster(industry), bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     8.2785
                        Prob>|z| =     0.0000
- qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     4.0267
                        Prob>|z| =     0.0260

95% confidence set for null hypothesis expression: [−.9149, −.602] ∪ [.3026, 1.331]
- boottest, `julia' nograph ar
= boottest,  nograph ar

Wild bootstrap-t, null imposed, 999 replications, Anderson-Rubin Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                   chi2(2) =    18.4337
               Prob > chi2 =     0.0000

95% confidence set for null hypothesis expression: [.1677, 4.839]
- qui ivregress liml wage (collgrad tenure = ttl_exp union), cluster(industry)
- boottest, `julia' ar nogr
= boottest,  ar nogr

Wild bootstrap-t, null imposed, 999 replications, Anderson-Rubin Wald test, bootstrap clustering by industry, Rademacher weights:
  collgrad tenure

                   chi2(2) =   477.2687
               Prob > chi2 =     0.0000
- boottest collgrad tenure, `julia' gridpoints(10 10) nogr
= boottest collgrad tenure,  gridpoints(10 10) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  collgrad tenure

                   chi2(2) =    65.9990
               Prob > chi2 =     0.0030
- qui regress wage tenure ttl_exp collgrad, robust
- boottest tenure, `julia' nogr
= boottest tenure,  nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, Rademacher weights:
  tenure

                         t(2227) =     1.2941
                        Prob>|t| =     0.1852

95% confidence set for null hypothesis expression: [−.01528, .07978]
- qui ivregress liml wage (collgrad tenure = ttl_exp union), robust
- boottest, `julia' ar nogr
= boottest,  ar nogr

Wild bootstrap-t, null imposed, 999 replications, Anderson-Rubin Wald test, Rademacher weights:
  collgrad tenure

                   chi2(2) =   428.6568
               Prob > chi2 =     0.0000
- boottest collgrad tenure, `julia' gridpoints(10 10) nogr
= boottest collgrad tenure,  gridpoints(10 10) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, Rademacher weights:
  collgrad tenure

                   chi2(2) =   261.5326
               Prob > chi2 =     0.0000
- qui regress wage ttl_exp collgrad tenure, cluster(industry)
- waldtest collgrad tenure, cluster(industry age) nogr

Overriding estimator's cluster/robust settings with cluster(industry age)

Wald test, clustering by industry age:
  collgrad tenure

                  F(2, 11) =    40.5984
                  Prob > F =     0.0000
- boottest tenure, `julia' cluster(industry age) bootcluster(industry) gridmin(-.2) gridmax(.2) nogr
= boottest tenure,  cluster(industry age) bootcluster(industry) gridmin(-.2) gridmax(.2) nogr

Overriding estimator's cluster/robust settings with cluster(industry age)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by industry age, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     1.0951
                        Prob>|t| =     0.2603

95% confidence set for null hypothesis expression: [−.04167, .1327]
- qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<., cluster(age) absorb(industry)
- boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph
= boottest tenure,  cluster(age occupation) bootcluster(occupation) seed(999) nograph

Overriding estimator's cluster/robust settings with cluster(age occupation)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by age occupation, bootstrap clustering by occupation, Rademacher weights:
  tenure

                           t(12) =     0.4874
                        Prob>|t| =     0.6266

95% confidence set for null hypothesis expression: [−.04579, .1122]
- qui reg wage ttl_exp collgrad tenure i.industry [aw=hours] if occupation<., cluster(age)
- boottest tenure, `julia' cluster(age occupation) bootcluster(occupation) seed(999) nograph
= boottest tenure,  cluster(age occupation) bootcluster(occupation) seed(999) nograph

Overriding estimator's cluster/robust settings with cluster(age occupation)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by age occupation, bootstrap clustering by occupation, Rademacher weights:
  tenure

                           t(12) =     0.4874
                        Prob>|t| =     0.6266

95% confidence set for null hypothesis expression: [−.04579, .1122]
- qui probit c_city tenure wage ttl_exp collgrad, cluster(industry)
- boottest tenure, `julia' nogr
= boottest tenure,  nogr

Re-running regression with null imposed.


Iteration 0:   log likelihood = -1338.5964  
Iteration 1:   log likelihood = -1332.3403  
Iteration 2:   log likelihood =  -1332.339  
Iteration 3:   log likelihood =  -1332.339  

Probit regression                                       Number of obs =  2,217
                                                        Wald chi2(3)  =  12.58
Log likelihood = -1332.339                              Prob > chi2   = 0.0056

 ( 1)  [c_city]tenure = 0
------------------------------------------------------------------------------
      c_city | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      tenure |          0  (omitted)
        wage |   .0068643   .0051208     1.34   0.180    -.0031722    .0169008
     ttl_exp |  -.0021496   .0063972    -0.34   0.737    -.0146879    .0103888
    collgrad |   .1904642   .0675515     2.82   0.005     .0580657    .3228626
       _cons |  -.6223347   .0848449    -7.33   0.000    -.7886276   -.4560418
------------------------------------------------------------------------------

Score bootstrap-t, null imposed, 999 replications, Wald test, clustering by cluster(industry), bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     0.2980
                        Prob>|z| =     0.7708
- boottest tenure, `julia' cluster(industry age) bootcluster(industry) small nogr
= boottest tenure,  cluster(industry age) bootcluster(industry) small nogr

Overriding estimator's cluster/robust settings with cluster(industry age)

Re-running regression with null imposed.


Iteration 0:   log likelihood = -1338.5964  
Iteration 1:   log likelihood = -1332.3403  
Iteration 2:   log likelihood =  -1332.339  
Iteration 3:   log likelihood =  -1332.339  

Probit regression                                       Number of obs =  2,217
                                                        Wald chi2(3)  =  12.58
Log likelihood = -1332.339                              Prob > chi2   = 0.0056

 ( 1)  [c_city]tenure = 0
------------------------------------------------------------------------------
      c_city | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      tenure |          0  (omitted)
        wage |   .0068643   .0051208     1.34   0.180    -.0031722    .0169008
     ttl_exp |  -.0021496   .0063972    -0.34   0.737    -.0146879    .0103888
    collgrad |   .1904642   .0675515     2.82   0.005     .0580657    .3228626
       _cons |  -.6223347   .0848449    -7.33   0.000    -.7886276   -.4560418
------------------------------------------------------------------------------

Score bootstrap-t, null imposed, 999 replications, Wald test, clustering by cluster(industry), bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     0.2803
                        Prob>|t| =     0.7486
- qui gsem (c_city <- tenure wage ttl_exp collgrad), vce(cluster industry) probit
- boottest tenure, `julia'
= boottest tenure, 

Re-running regression with null imposed.


Iteration 0:   log likelihood = -1334.9102  
Iteration 1:   log likelihood = -1332.3392  
Iteration 2:   log likelihood =  -1332.339  
Iteration 3:   log likelihood =  -1332.339  

Generalized structural equation model                    Number of obs = 2,217
Response         : c_city
Family           : Bernoulli
Link             : probit
Log likelihood = -1332.339

 ( 1)  [c_city]tenure = 0
------------------------------------------------------------------------------
             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
c_city       |
      tenure |          0  (omitted)
        wage |   .0068643   .0051208     1.34   0.180    -.0031722    .0169008
     ttl_exp |  -.0021496   .0063972    -0.34   0.737    -.0146879    .0103888
    collgrad |   .1904642   .0675515     2.82   0.005     .0580657    .3228626
       _cons |  -.6223347   .0848449    -7.33   0.000    -.7886276   -.4560418
------------------------------------------------------------------------------

Score bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     0.2980
                        Prob>|z| =     0.7808
- boottest tenure, `julia' cluster(industry age) bootcluster(industry) small
= boottest tenure,  cluster(industry age) bootcluster(industry) small

Overriding estimator's cluster/robust settings with cluster(industry age)

Re-running regression with null imposed.


Iteration 0:   log likelihood = -1334.9102  
Iteration 1:   log likelihood = -1332.3392  
Iteration 2:   log likelihood =  -1332.339  
Iteration 3:   log likelihood =  -1332.339  

Generalized structural equation model                    Number of obs = 2,217
Response         : c_city
Family           : Bernoulli
Link             : probit
Log likelihood = -1332.339

 ( 1)  [c_city]tenure = 0
------------------------------------------------------------------------------
             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
c_city       |
      tenure |          0  (omitted)
        wage |   .0068643   .0051208     1.34   0.180    -.0031722    .0169008
     ttl_exp |  -.0021496   .0063972    -0.34   0.737    -.0146879    .0103888
    collgrad |   .1904642   .0675515     2.82   0.005     .0580657    .3228626
       _cons |  -.6223347   .0848449    -7.33   0.000    -.7886276   -.4560418
------------------------------------------------------------------------------

Score bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     0.2803
                        Prob>|t| =     0.7402
- sysuse auto, clear
(1978 automobile data)
- ml model lf myprobit (foreign = mpg weight)
- qui ml max
- boottest mpg, `julia' cmdline(ml model lf myprobit (foreign = mpg weight))
= boottest mpg,  cmdline(ml model lf myprobit (foreign = mpg weight))

Re-running regression with null imposed.


initial:       log likelihood = -51.292891
alternative:   log likelihood = -45.055272
rescale:       log likelihood = -45.055272
Iteration 0:   log likelihood = -45.055272  
Iteration 1:   log likelihood =  -29.50801  
Iteration 2:   log likelihood =  -28.91221  
Iteration 3:   log likelihood = -28.908406  
Iteration 4:   log likelihood = -28.908406  

Score bootstrap-t, null imposed, 999 replications, Wald test, Rademacher weights:
  mpg

                               z =    -1.0204
                        Prob>|z| =     0.0350
- use collapsed, clear
- qui regress hasinsurance selfemployed post post_self, cluster(year)
- boottest post_self=.04, `julia' weight(webb) nogr
= boottest post_self=.04,  weight(webb) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0791

95% confidence set for null hypothesis expression: [.03846, .07082]
- boottest post_self=.04, `julia' weight(webb) reps(9999999) noci
= boottest post_self=.04,  weight(webb) reps(9999999) noci

Wild bootstrap-t, null imposed, 9999999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0757
- boottest post_self=.04, `julia' weight(normal) reps(9999) noci
= boottest post_self=.04,  weight(normal) reps(9999) noci

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Normal weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0665
- boottest post_self=.04, `julia' weight(gamma) reps(9999) noci svv
= boottest post_self=.04,  weight(gamma) reps(9999) noci svv

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Gamma weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.0638
- boottest post_self=.04, `julia' weight(mammen) reps(9999) noci
= boottest post_self=.04,  weight(mammen) reps(9999) noci

Warning: with 8 bootstrap clusters, the number of replications, 9999, exceeds the universe of Mammen draws, 2^8 = 256. 
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Mammen weights:
  post_self=.04

                            t(7) =     2.0194
                        Prob>|t| =     0.1022
- boottest post_self=.04, `julia' weight(mammen) reps(9999) boottype(score) nogr
= boottest post_self=.04,  weight(mammen) reps(9999) boottype(score) nogr

Warning: with 8 bootstrap clusters, the number of replications, 9999, exceeds the universe of Mammen draws, 2^8 = 256. 
Consider Webb weights instead, using weight(webb).

Score bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Mammen weights:
  post_self=.04

                            t(7) =     1.8479
                        Prob>|t| =     0.0838

95% confidence set for null hypothesis expression: [.02898, .03173] ∪ [.03628, .07621]
- qui regress hasinsurance selfemployed post post_self, robust
- boottest post_self=.04, `julia' weight(webb) nogr
= boottest post_self=.04,  weight(webb) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, Webb weights:
  post_self=.04

                           t(12) =     1.5097
                        Prob>|t| =     0.1642

95% confidence set for null hypothesis expression: [.03283, .07845]
- qui regress hasinsurance selfemployed post post_self, cluster(year)
- boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
= boottest (post_self=.05) (post=-.02),  reps(9999) weight(webb) nogr

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.05
  post=-.02

                   F(2, 7) =     0.3383
                  Prob > F =     0.8268
- boottest (post_self=.05) (post=-.02) (selfemployed=-.15), `julia' reps(9999) weight(webb) nogr
= boottest (post_self=.05) (post=-.02) (selfemployed=-.15),  reps(9999) weight(webb) nogr

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by year, Webb weights:
  post_self=.05
  post=-.02
  selfemployed=-.15

                   F(3, 7) =     0.8534
                  Prob > F =     0.7549
- qui regress hasinsurance selfemployed post post_self
- boottest post_self=.04, `julia' weight(webb) nogr
= boottest post_self=.04,  weight(webb) nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, Webb weights:
  post_self=.04

                           t(12) =     1.5215
                        Prob>|t| =     0.1622

95% confidence set for null hypothesis expression: [.03374, .07787]
- boottest (post_self=.05) (post=-.02), `julia' reps(9999) weight(webb) nogr
= boottest (post_self=.05) (post=-.02),  reps(9999) weight(webb) nogr

Wild bootstrap-t, null imposed, 9999 replications, Wald test, Webb weights:
  post_self=.05
  post=-.02

                  F(2, 12) =     0.1895
                  Prob > F =     0.7945
- scoretest (post_self=.05), `julia' nogr
= scoretest (post_self=.05),  nogr

Rao score (Lagrange multiplier) test:
  post_self=.05

                           t(12) =     0.4924
                        Prob>|t| =     0.6313

95% confidence set for null hypothesis expression: [.02749, .08223]
- scoretest (post_self=.05) (post=-.02), `julia' nogr
= scoretest (post_self=.05) (post=-.02),  nogr

Rao score (Lagrange multiplier) test:
  post_self=.05
  post=-.02

                  F(2, 12) =     0.1837
                  Prob > F =     0.8345
- boottest (post_self=.08), `julia' boottype(score) reps(9999) nogr
= boottest (post_self=.08),  boottype(score) reps(9999) nogr

Score bootstrap-t, null imposed, 9999 replications, Wald test, Rademacher weights:
  post_self=.08

                           t(12) =    -2.0664
                        Prob>|t| =     0.0193

95% confidence set for null hypothesis expression: [.03538, .07478]
- boottest (post_self=.05) (post=-.02), `julia' boottype(score) reps(9999) nogr
= boottest (post_self=.05) (post=-.02),  boottype(score) reps(9999) nogr

Score bootstrap-t, null imposed, 9999 replications, Wald test, Rademacher weights:
  post_self=.05
  post=-.02

                  F(2, 12) =     0.1837
                  Prob > F =     0.7733
- use nlsw88, clear
(NLSW, 1988 extract)
- constraint 1 ttl_exp = .2
- qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(industry)
- boottest tenure, `julia' nogr
= boottest tenure,  nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     2.1254
                        Prob>|t| =     0.0030

95% confidence set for null hypothesis expression: [.008795, .2115]
- keep if e(sample)
(29 observations deleted)
- gen id = _n - cond(_n>1000, 1000, 0)
- qui cnsreg wage tenure ttl_exp collgrad, constr(1) cluster(id)
- boottest tenure, `julia' reps(9999) nogr
= boottest tenure,  reps(9999) nogr

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by id, Rademacher weights:
  tenure

                         t(1216) =     3.3434
                        Prob>|t| =     0.0009

95% confidence set for null hypothesis expression: [.02721, .1027]
- qui areg wage tenure ttl_exp collgrad, cluster(id) a(industry)
- boottest tenure, `julia' reps(9999) nogr
= boottest tenure,  reps(9999) nogr

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by id, Rademacher weights:
  tenure

                         t(1216) =     0.7606
                        Prob>|t| =     0.4456

95% confidence set for null hypothesis expression: [−.02785, .06359]
- use d:\OneDrive\Documents\Macros\nlsw88, clear
(NLSW, 1988 extract)
- qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
- boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
= boottest tenure,  ptype(equaltail) reps(9999) nogr

Warning: with 12 bootstrap clusters, the number of replications, 9999, exceeds the universe of Rademacher draws, 2^12 = 4096. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 4096 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
    2 * min(Prob>|z|, Prob<-|z|) =     0.0444

95% confidence set for null hypothesis expression: [.1175, 2.233]
- boottest tenure, `julia' nonull reps(99999) matsize(.1) nogr
= boottest tenure,  nonull reps(99999) matsize(.1) nogr

Warning: with 12 bootstrap clusters, the number of replications, 99999, exceeds the universe of Rademacher draws, 2^12 = 4096. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null not imposed, 4096 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
                        Prob>|z| =     0.0000

95% confidence set for null hypothesis expression: [.2193, 1.253]
- boottest tenure, `julia' ptype(upper) svmat(t) reps(9999) nogr
= boottest tenure,  ptype(upper) svmat(t) reps(9999) nogr

Warning: with 12 bootstrap clusters, the number of replications, 9999, exceeds the universe of Rademacher draws, 2^12 = 4096. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 4096 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
                          Prob>z =     0.0222

95% confidence set for null hypothesis expression: [.2769, ∞)
- boottest tenure, `julia' ptype(lower) svmat(numer) reps(9999) nogr
= boottest tenure,  ptype(lower) svmat(numer) reps(9999) nogr

Warning: with 12 bootstrap clusters, the number of replications, 9999, exceeds the universe of Rademacher draws, 2^12 = 4096. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 4096 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
                          Prob<z =     0.9775

95% confidence set for null hypothesis expression: (−∞, 1.793]
- qui ivregress liml wage ttl_exp collgrad (tenure = union), cluster(industry)
- boottest tenure, `julia' ptype(equaltail) reps(9999) nogr
= boottest tenure,  ptype(equaltail) reps(9999) nogr

Warning: with 12 bootstrap clusters, the number of replications, 9999, exceeds the universe of Rademacher draws, 2^12 = 4096. Sampling each once.
Consider Webb weights instead, using weight(webb).

Wild bootstrap-t, null imposed, 4096 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.6040
    2 * min(Prob>|z|, Prob<-|z|) =     0.0444

95% confidence set for null hypothesis expression: [.1175, 2.233]
- qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
- boottest tenure, `julia' ptype(equaltail) reps(99) noci
= boottest tenure,  ptype(equaltail) reps(99) noci

Wild bootstrap-t, null imposed, 99 replications, Wald test, Rademacher weights:
  tenure

                               z =     3.5823
    2 * min(Prob>|z|, Prob<-|z|) =     0.0000
- qui ivregress liml wage ttl_exp collgrad (tenure = union) if industry<., robust
- boottest tenure, ptype(equaltail) reps(99) noci

Wild bootstrap-t, null imposed, 99 replications, Wald test, Rademacher weights:
  tenure

                               z =     3.5823
    2 * min(Prob>|z|, Prob<-|z|) =     0.0000
- boottest collgrad tenure, `julia' ptype(equaltail) reps(99) noci
= boottest collgrad tenure,  ptype(equaltail) reps(99) noci
Note: ptype(equaltail) ignored for multi-constraint null hypotheses.

Wild bootstrap-t, null imposed, 99 replications, Wald test, Rademacher weights:
  collgrad tenure

                   chi2(2) =   139.0793
               Prob > chi2 =     0.0000
- qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<.
- boottest tenure, `julia' ptype(equaltail) reps(99) noci
= boottest tenure,  ptype(equaltail) reps(99) noci

Wild bootstrap-t, null imposed, 99 replications, Wald test, Rademacher weights:
  tenure

                               z =   160.7675
    2 * min(Prob>|z|, Prob<-|z|) =     0.0000
- boottest tenure collgrad, `julia' ptype(equaltail) reps(99) noci
= boottest tenure collgrad,  ptype(equaltail) reps(99) noci
Note: ptype(equaltail) ignored for multi-constraint null hypotheses.

Wild bootstrap-t, null imposed, 99 replications, Wald test, Rademacher weights:
  tenure collgrad

                   chi2(2) =  3.120e+05
               Prob > chi2 =     0.0000
- qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
- boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) nogr
= boottest tenure,  ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) nogr

Wild bootstrap-c, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Webb weights:
  tenure

                               z =     1.6364
    2 * min(Prob>|z|, Prob<-|z|) =     0.1301

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
Note: denominator for z statistic computed from the bootstrap replications of the numerator.
- boottest tenure, `julia' ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) matsize(.01) nogr
= boottest tenure,  ptype(equaltail) weight(webb) stat(c) gridmin(-5) gridmax(5) gridpoints(100) matsize(.01) nogr

Wild bootstrap-c, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Webb weights:
  tenure

                               z =     1.6409
    2 * min(Prob>|z|, Prob<-|z|) =     0.1121

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
Note: denominator for z statistic computed from the bootstrap replications of the numerator.
- qui ivregress 2sls wage ttl_exp collgrad (tenure = union) if industry<., robust
- boottest tenure, `julia' ptype(equaltail) matsize(.005) noci weight(webb)
= boottest tenure,  ptype(equaltail) matsize(.005) noci weight(webb)

Wild bootstrap-t, null imposed, 999 replications, Wald test, Webb weights:
  tenure

                               z =     3.5823
    2 * min(Prob>|z|, Prob<-|z|) =     0.0000
- preserve
- keep if e(sample)
(391 observations deleted)
- gen id = _n - cond(_n>1000, 1000, 0)
- boottest tenure, `julia' cluster(id) ptype(equaltail) matsize(.005) noci weight(webb)
= boottest tenure,  cluster(id) ptype(equaltail) matsize(.005) noci weight(webb)

Overriding estimator's cluster/robust settings with cluster(id)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by id, bootstrap clustering by id, Webb weights:
  tenure

                               z =     3.5883
    2 * min(Prob>|z|, Prob<-|z|) =     0.0000
- restore
- qui ivregress 2sls wage ttl_exp collgrad (tenure = union), cluster(industry)
- boottest, `julia' ar nogr
= boottest,  ar nogr

Wild bootstrap-t, null imposed, 999 replications, Anderson-Rubin Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.4454
                        Prob>|z| =     0.0350

95% confidence set for null hypothesis expression: [.04748, 1.27]
- boottest, `julia' ar nonull nogr
= boottest,  ar nonull nogr

Wild bootstrap-t, null not imposed, 999 replications, Anderson-Rubin Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     2.4454
                        Prob>|z| =     0.0280

95% confidence set for null hypothesis expression: [.05172, 1.42]
- scoretest tenure, `julia' nogr
= scoretest tenure,  nogr

Rao score (Lagrange multiplier) test:
  tenure

                               z =     2.3279
                        Prob>|z| =     0.0199

95% confidence set for null hypothesis expression: [.1367, 1.324]
- waldtest tenure, `julia' ptype(upper) nogr
= waldtest tenure,  ptype(upper) nogr

Wald test:
  tenure

                               z =     2.6040
                          Prob>z =     0.0046

95% confidence set for null hypothesis expression: [.182, 1.29]
- qui ivregress liml wage (tenure = collgrad ttl_exp), cluster(industry)
- boottest tenure, `julia' nogr
= boottest tenure,  nogr

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                               z =     7.5847
                        Prob>|z| =     0.0070

95% confidence set for null hypothesis expression: [.3167, .8054]
- qui ivreg2 wage collgrad smsa race age (tenure = union married), cluster(industry) fuller(1)
- boottest tenure, `julia' nograph weight(webb) reps(9999)
= boottest tenure,  nograph weight(webb) reps(9999)

Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by industry, Webb weights:
  tenure

                               z =     4.0267
                        Prob>|z| =     0.0245

95% confidence set for null hypothesis expression: [−.8772, −.3447] ∪ [.3143, 1.272]
- qui gen individual = _n
- boottest tenure, `julia' noci bootcluster(individual) weight(webb)
= boottest tenure,  noci bootcluster(individual) weight(webb)

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by individual, Webb weights:
  tenure

                               z =     4.0267
                        Prob>|z| =     0.0060
- boottest tenure, `julia' nograph bootcluster(collgrad) cluster(collgrad industry) weight(webb) reps(9999)
= boottest tenure,  nograph bootcluster(collgrad) cluster(collgrad industry) weight(webb) reps(9999)

Overriding estimator's cluster/robust settings with cluster(collgrad industry)

Warning: 561 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by collgrad industry, bootstrap clustering by collgrad, Webb weights:
  tenure

                               z =     3.9420
                        Prob>|z| =     0.2081

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
- qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., cluster(age) absorb(industry)
- boottest tenure, `julia' nograph cluster(age occupation) bootcluster(occupation)
= boottest tenure,  nograph cluster(age occupation) bootcluster(occupation)

Overriding estimator's cluster/robust settings with cluster(age occupation)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by age occupation, bootstrap clustering by occupation, Rademacher weights:
  tenure

                           t(12) =     1.4294
                        Prob>|t| =     0.1411

95% confidence set for null hypothesis expression: [−.01077, .1234]
- qui areg wage ttl_exp collgrad tenure if occupation<. & grade<. & union<. & hours<., robust absorb(industry)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, Rademacher weights:
  tenure

                         t(1833) =     1.6602
                        Prob>|t| =     0.0811

95% confidence set for null hypothesis expression: [−.004636, .07465]
- qui areg wage ttl_exp collgrad tenure [aw=hours] if occupation<. & grade<. & union<., robust absorb(industry)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, Rademacher weights:
  tenure

                         t(1833) =     1.6265
                        Prob>|t| =     0.1231

95% confidence set for null hypothesis expression: [−.009574, .07814]
- qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(industry)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     0.8178
                        Prob>|t| =     0.4535

95% confidence set for null hypothesis expression: [−.02383, .06665]
- boottest occupation, `julia' nograph
= boottest occupation,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  occupation

                           t(11) =     1.5386
                        Prob>|t| =     0.2152

95% confidence set for null hypothesis expression: (−∞, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
- qui ivreghdfe wage ttl_exp collgrad tenure (occupation = union married) [aw=hours] if grade<., liml cluster(industry) absorb(age)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     0.6071
                        Prob>|t| =     0.4805

95% confidence set for null hypothesis expression: [−.04542, .05643]
- boottest collgrad tenure, `julia' nograph
= boottest collgrad tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  collgrad tenure

                  F(2, 11) =     3.5319
                  Prob > F =     0.1572
- boottest occupation, `julia' gridmin(-1) gridmax(1) nograph
= boottest occupation,  gridmin(-1) gridmax(1) nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  occupation

                           t(11) =     1.1084
                        Prob>|t| =     0.2222

95% confidence set for null hypothesis expression: [−.5713, ∞)
(A confidence interval could not be bounded. Try widening the search range with the gridmin() and gridmax() options.)
- constraint 1 [wage]collgrad
- qui ivreghdfe wage ttl_exp tenure (occupation = union married) [aw=hours], liml cluster(industry) absorb(age)
- boottest tenure, `julia' nograph
= boottest tenure,  nograph

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by industry, Rademacher weights:
  tenure

                           t(11) =     0.2685
                        Prob>|t| =     0.7828

95% confidence set for null hypothesis expression: [−.05867, .0703]
- use d:\OneDrive\Documents\Macros\abdata, clear
- qui areg n w k, absorb(ind)
- boottest k, `julia' cluster(id year) nograph
= boottest k,  cluster(id year) nograph

Overriding estimator's cluster/robust settings with cluster(id year)
(bootcluster(id year) assumed)

Warning: 34 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by id year, bootstrap clustering by id year, Rademacher weights:
  k

                            t(8) =    28.5012
                        Prob>|t| =     0.0010

95% confidence set for null hypothesis expression: [.844, .8847]
- qui areg n w k [aw=ys], absorb(ind)
- boottest k, `julia' cluster(id year) nograph
= boottest k,  cluster(id year) nograph

Overriding estimator's cluster/robust settings with cluster(id year)
(bootcluster(id year) assumed)

Warning: 31 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by id year, bootstrap clustering by id year, Rademacher weights:
  k

                            t(8) =    28.4248
                        Prob>|t| =     0.0000

95% confidence set for null hypothesis expression: [.8449, .8833]
- use pixel-level-baseline-final, clear
- global pix lnkm pixpetro pixdia pixwaterd pixcapdist pixmal pixsead pixsuit pixelev pixbdist
- global geo lnwaterkm lnkm2split mean_elev mean_suit malariasuit petroleum diamondd
- global poly capdistance1 seadist1 borderdist1
- qui encode pixwbcode, gen(ccode)
- qui areg lnl0708s centr_tribe lnpd0 \$pix \$geo \$poly, absorb(ccode)
= qui areg lnl0708s centr_tribe lnpd0 $pix $geo $poly, absorb(ccode)
- boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode)
= boottest centr_tribe,  nogr reps(999) clust(ccode pixcluster) bootcluster(ccode)

Overriding estimator's cluster/robust settings with cluster(ccode pixcluster)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by ccode pixcluster, bootstrap clustering by ccode, Rademacher weights:
  centr_tribe

                           t(48) =     3.5211
                        Prob>|t| =     0.0020

95% confidence set for null hypothesis expression: [.05866, .2531]
- boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(pixcluster)
= boottest centr_tribe,  nogr reps(999) clust(ccode pixcluster) bootcluster(pixcluster)

Overriding estimator's cluster/robust settings with cluster(ccode pixcluster)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by ccode pixcluster, bootstrap clustering by pixcluster, Rademacher weights:
  centr_tribe

                           t(48) =     3.5211
                        Prob>|t| =     0.0000

95% confidence set for null hypothesis expression: [.04108, .2636]
- boottest centr_tribe, `julia' nogr reps(999) clust(ccode pixcluster) bootcluster(ccode pixcluster)
= boottest centr_tribe,  nogr reps(999) clust(ccode pixcluster) bootcluster(ccode pixcluster)

Overriding estimator's cluster/robust settings with cluster(ccode pixcluster)

Wild bootstrap-t, null imposed, 999 replications, Wald test, clustering by ccode pixcluster, bootstrap clustering by ccode pixcluster, Rademacher weights:
  centr_tribe

                           t(48) =     3.5211
                        Prob>|t| =     0.0020

95% confidence set for null hypothesis expression: [.05609, .2464]
- infile coll merit male black asian year state chst using regm.raw, clear
(42,161 observations read)
- qui regress coll merit male black asian i.year i.state if !inlist(state,34,57,59,61,64,71,72,85,88), cluster(state)
- generate individual = _n
- boottest merit, `julia' nogr reps(999) gridpoints(10)
= boottest merit,  nogr reps(999) gridpoints(10)

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by state, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.4635

95% confidence set for null hypothesis expression: [−2.826, 1.31]
- boottest merit, `julia' nogr reps(999) gridpoints(10) nonull
= boottest merit,  nogr reps(999) gridpoints(10) nonull

Wild bootstrap-t, null not imposed, 999 replications, Wald test, bootstrap clustering by state, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.0000

95% confidence set for null hypothesis expression: [.04931, .09502]
- boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(state year)
= boottest merit,  nogr reps(999) gridpoints(10) bootcluster(state year)

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by state year, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.3113

95% confidence set for null hypothesis expression: [−5.392, 4.968]
- boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(state year)
= boottest merit,  nogr reps(999) gridpoints(10) nonull bootcluster(state year)

Wild bootstrap-t, null not imposed, 999 replications, Wald test, bootstrap clustering by state year, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.0931

95% confidence set for null hypothesis expression: [−.01034, .1547]
- boottest merit, `julia' nogr reps(999) gridpoints(10) bootcluster(individual)
= boottest merit,  nogr reps(999) gridpoints(10) bootcluster(individual)

Wild bootstrap-t, null imposed, 999 replications, Wald test, bootstrap clustering by individual, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.4244

95% confidence set for null hypothesis expression: [−.1036, .2429]
- boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual)
= boottest merit,  nogr reps(999) gridpoints(10) nonull bootcluster(individual)

Wild bootstrap-t, null not imposed, 999 replications, Wald test, bootstrap clustering by individual, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.4094

95% confidence set for null hypothesis expression: [−.09893, .2433]
- boottest merit, `julia' nogr reps(999) gridpoints(10) nonull bootcluster(individual) matsize(.1)
= boottest merit,  nogr reps(999) gridpoints(10) nonull bootcluster(individual) matsize(.1)

Wild bootstrap-t, null not imposed, 999 replications, Wald test, bootstrap clustering by individual, Rademacher weights:
  merit

                           t(41) =     6.7127
                        Prob>|t| =     0.3894

95% confidence set for null hypothesis expression: [−.09375, .2381]
- }

. qui log close
